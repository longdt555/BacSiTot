// <auto-generated />
using System;
using Lib.Data.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lib.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lib.Data.Entity.DiseasesModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Diseases");
                });

            modelBuilder.Entity("Lib.Data.Entity.FacilityReviewModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("HealthFacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("Question1Score")
                        .HasColumnType("real");

                    b.Property<float>("Question2Score")
                        .HasColumnType("real");

                    b.Property<float>("Question3Score")
                        .HasColumnType("real");

                    b.Property<float>("Question4Score")
                        .HasColumnType("real");

                    b.Property<bool>("RecommendUsing")
                        .HasColumnType("bit");

                    b.Property<string>("TimeVisited")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HealthFacilityId");

                    b.ToTable("FacilityReview");
                });

            modelBuilder.Entity("Lib.Data.Entity.FacilityTypeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityClassificationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacilityType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("479d14e9-68da-4a06-abba-f6b4773389b2"),
                            Description = "Bệnh viện Đa Khoa",
                            FacilityClassificationId = "e4695a9a-a403-4504-97cd-8cb9fc13bcef",
                            IsDeleted = false,
                            Name = "General Hospital"
                        },
                        new
                        {
                            Id = new Guid("46b0cd5a-2e83-464a-9928-6554064cab10"),
                            Description = "Bệnh viện Nhi",
                            FacilityClassificationId = "e4695a9a-a403-4504-97cd-8cb9fc13bcef",
                            IsDeleted = false,
                            Name = "Children Hospital"
                        },
                        new
                        {
                            Id = new Guid("4d17f2bb-6d2e-4762-afa5-740395c6d883"),
                            Description = "Bệnh viện Da Liễu",
                            FacilityClassificationId = "e4695a9a-a403-4504-97cd-8cb9fc13bcef",
                            IsDeleted = false,
                            Name = "Dermatology Hospital"
                        },
                        new
                        {
                            Id = new Guid("b2fa11cd-e77d-4d38-8762-678b70ff369b"),
                            Description = "Bệnh viện Phụ Sản",
                            FacilityClassificationId = "e4695a9a-a403-4504-97cd-8cb9fc13bcef",
                            IsDeleted = false,
                            Name = "Maternity Hospital"
                        },
                        new
                        {
                            Id = new Guid("4df45d9b-53cc-46ea-8bb6-4cc420c5a35d"),
                            Description = "Phòng khám Đa Khoa",
                            FacilityClassificationId = "2cd00e51-35a9-4396-9354-03f976c8018c",
                            IsDeleted = false,
                            Name = "General Clinic"
                        },
                        new
                        {
                            Id = new Guid("6f4d66f9-84fd-4030-9805-ed411798075a"),
                            Description = "Phòng khám Nhi",
                            FacilityClassificationId = "2cd00e51-35a9-4396-9354-03f976c8018c",
                            IsDeleted = false,
                            Name = "Children Clinic"
                        },
                        new
                        {
                            Id = new Guid("2951bfb5-2bfd-44f7-b4b2-20af69ac845a"),
                            Description = "Phòng khám Da Liễu",
                            FacilityClassificationId = "2cd00e51-35a9-4396-9354-03f976c8018c",
                            IsDeleted = false,
                            Name = "Dermatology Clinic"
                        },
                        new
                        {
                            Id = new Guid("f9094245-b8ec-4ed7-9cf7-306929bcc34d"),
                            Description = "Phòng khám Phụ Sản",
                            FacilityClassificationId = "2cd00e51-35a9-4396-9354-03f976c8018c",
                            IsDeleted = false,
                            Name = "Maternity Clinic"
                        },
                        new
                        {
                            Id = new Guid("a6cb5893-fa04-4b87-8d02-6a8eb4d80a45"),
                            Description = "Cở sở dịch vụ Kính thuốc",
                            FacilityClassificationId = "a3dd8301-d9cb-4745-968c-e1424e1db0ff",
                            IsDeleted = false,
                            Name = "Glass Medicine"
                        });
                });

            modelBuilder.Entity("Lib.Data.Entity.HealthFacilityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commune")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FanPage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThumbnailImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HealthFacility");
                });

            modelBuilder.Entity("Lib.Data.Entity.HealthFacilityServiceModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DiseasesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HealthFacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiseasesId");

                    b.HasIndex("HealthFacilityId");

                    b.ToTable("HealthFacilityService");
                });

            modelBuilder.Entity("Lib.Data.Entity.HealthFacilityTypeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FacilityTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HealthFacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FacilityTypeId");

                    b.HasIndex("HealthFacilityId");

                    b.ToTable("HealthFacilityType");
                });

            modelBuilder.Entity("Lib.Data.Entity.MasterDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MasterData");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e4695a9a-a403-4504-97cd-8cb9fc13bcef"),
                            Description = "Bệnh viện",
                            GroupId = 2,
                            IsDeleted = false,
                            Name = "Hospital"
                        },
                        new
                        {
                            Id = new Guid("2cd00e51-35a9-4396-9354-03f976c8018c"),
                            Description = "Phòng khám",
                            GroupId = 2,
                            IsDeleted = false,
                            Name = "Clinic"
                        },
                        new
                        {
                            Id = new Guid("a3dd8301-d9cb-4745-968c-e1424e1db0ff"),
                            Description = "Cơ sở dịch vụ y tế",
                            GroupId = 2,
                            IsDeleted = false,
                            Name = "Medical Service Facility"
                        });
                });

            modelBuilder.Entity("Lib.Data.Entity.FacilityReviewModel", b =>
                {
                    b.HasOne("Lib.Data.Entity.HealthFacilityModel", "HealthFacility")
                        .WithMany("FacilityReviews")
                        .HasForeignKey("HealthFacilityId");
                });

            modelBuilder.Entity("Lib.Data.Entity.HealthFacilityServiceModel", b =>
                {
                    b.HasOne("Lib.Data.Entity.DiseasesModel", "Diseases")
                        .WithMany("HealthFacilityServices")
                        .HasForeignKey("DiseasesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lib.Data.Entity.HealthFacilityModel", "HealthFacility")
                        .WithMany("HealthFacilityServices")
                        .HasForeignKey("HealthFacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lib.Data.Entity.HealthFacilityTypeModel", b =>
                {
                    b.HasOne("Lib.Data.Entity.FacilityTypeModel", "FacilityType")
                        .WithMany("HealthFacilityTypes")
                        .HasForeignKey("FacilityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lib.Data.Entity.HealthFacilityModel", "HealthFacility")
                        .WithMany("HealthFacilityTypes")
                        .HasForeignKey("HealthFacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
